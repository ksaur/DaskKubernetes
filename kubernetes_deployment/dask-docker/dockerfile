FROM nvidia/cuda:9.0-devel-ubuntu16.04 as base

ENV CUDNN_VERSION=7.4.1.5-1+cuda9.0

RUN echo "deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list

RUN apt-get update && apt-get install -y --no-install-recommends --allow-downgrades --allow-change-held-packages \
        build-essential \
        bzip2 \
        ca-certificates \
        cmake \
        git \
        curl \
        wget \
        unzip \
        locales \
        apt-transport-https \
        software-properties-common \
        libcudnn7=${CUDNN_VERSION} \
        libjpeg-dev \
        libpng-dev \
        libglib2.0-0 \
        libxext6 \
        libsm6 \
        libxrender1 \
        mercurial \
        subversion


ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH /opt/conda/bin:$PATH


RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.12-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc

CMD [ "/bin/bash" ]

# Dumb init
RUN wget -O /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64
RUN chmod +x /usr/local/bin/dumb-init

COPY kubernetes_deployment/dask-docker/requirements.txt .

RUN conda install --yes \
    -c conda-forge \
    -c pytorch \
    --file requirements.txt \
	&& conda clean -tipsy

COPY common_scripts/prepare.sh /usr/bin/prepare.sh
RUN chmod +x /usr/bin/prepare.sh

RUN mkdir /opt/app
ENTRYPOINT ["/usr/local/bin/dumb-init", "/usr/bin/prepare.sh"]

FROM base as style_transfer

RUN mkdir /python_libs
COPY src/style_transfer /python_libs/style_transfer
ENV PYTHONPATH /python_libs:/python_libs/style_transfer:$PYTHONPATH

FROM base as maskrcnn

RUN apt-get update -y \
 && apt-get install -y \
 	apt-utils \
 	cmake \
 	tree \
 	htop \
 	bmon \
 	iotop \
 	g++ \
	jq \
	ffmpeg


RUN conda install -y conda-build
RUN conda install -y opencv -c menpo && \
	conda clean -ya

RUN pip install cython ninja yacs

# install pycocotools
RUN git clone https://github.com/cocodataset/cocoapi.git \
 && cd cocoapi/PythonAPI \
 && python setup.py build_ext install

# install apex
RUN git clone https://github.com/NVIDIA/apex.git \
 && cd apex \
 && python setup.py install --cuda_ext --cpp_ext


RUN git clone https://github.com/facebookresearch/maskrcnn-benchmark.git \
 && cd maskrcnn-benchmark \
 && sed -i -e 's/torch.cuda.is_available()/True/g' setup.py \
 && python setup.py build develop \
 && sed -i -e 's/True/torch.cuda.is_available()/g' setup.py

RUN mkdir /python_libs
COPY src/maskrcnn /python_libs/maskrcnn
ENV PYTHONPATH /python_libs:/python_libs/maskrcnn:$PYTHONPATH
